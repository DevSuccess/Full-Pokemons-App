{"version":3,"sources":["helpers/format-date.ts","helpers/format-type.ts","components/pokemon-card.tsx","mocks/mock-pokemon.ts","services/pokemon-service.ts","components/pokemon-search.tsx","pages/pokemon-list.tsx","components/loader.tsx","pages/pokemon-details.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","models/pokemon.ts","pages/pokemon.add.tsx","services/authentication-service.ts","pages/login.tsx","PrivateRoute.tsx","App.tsx","index.tsx"],"names":["formatDate","date","arguments","length","undefined","Date","concat","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","_ref","pokemon","_ref$borderColor","borderColor","_useState","useState","_useState2","_slicedToArray","setColor","history","useHistory","goToPokemon","id","push","_jsx","className","onMouseEnter","onMouseLeave","children","_jsxs","style","src","picture","alt","name","types","created","map","onClick","POKEMONS","hp","cp","PokemonService","_classCallCheck","_createClass","key","value","_this","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","_this2","data","isEmpty","find","_this3","method","body","JSON","stringify","headers","index","findIndex","_this4","filter","_this5","term","_this6","includes","Object","keys","console","process","PokemonSearch","setTerm","_useState3","_useState4","setPokemons","placeholder","onChange","e","target","searchPokemon","handleInputChange","Link","to","PokemonList","useEffect","getPokemons","position","bottom","right","Loader","PokemonDetail","match","setPokemon","getPokemon","params","width","margin","PageNotFound","PokemonForm","isEditForm","isValid","form","setForm","isAddForm","hasType","fieldName","fieldValue","newField","_defineProperty","_objectSpread","addPokemon","updatePokemon","validateForm","newForm","startsWith","endsWith","test","isTypesValid","onSubmit","preventDefault","handleSubmit","deletePokemon","htmlFor","marginBottom","disabled","checked","currentType","selectType","PokemonEdit","Pokemon","PokemonAdd","getTime","AuthenticationService","username","password","isAuthenticated","setTimeout","Login","message","setMessage","login","PrivateRoute","Component","component","rest","_objectWithoutProperties","_excluded","Route","render","props","Redirect","pathname","App","Router","Switch","exact","path","PokemonsDetail","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ffdf7657.chunk.js","sourcesContent":["const formatDate = (date: Date = new Date()): string => {\r\n    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`\r\n}\r\n\r\nexport default formatDate;","const formatType = (type: string): string => {\r\n    let color: string;\r\n\r\n    switch (type) {\r\n        case 'Feu':\r\n            color = 'red lighten-1';\r\n            break;\r\n        case 'Eau':\r\n            color = 'blue lighten-1';\r\n            break;\r\n        case 'Plante':\r\n            color = 'green lighten-1';\r\n            break;\r\n        case 'Insecte':\r\n            color = 'brown lighten-1';\r\n            break;\r\n        case 'Normal':\r\n            color = 'grey lighten-3';\r\n            break;\r\n        case 'Vol':\r\n            color = 'blue lighten-3';\r\n            break;\r\n        case 'Poison':\r\n            color = 'deep-purple accent-1';\r\n            break;\r\n        case 'Fée':\r\n            color = 'pink lighten-4';\r\n            break;\r\n        case 'Psy':\r\n            color = 'deep-purple darken-2';\r\n            break;\r\n        case 'Electrik':\r\n            color = 'lime accent-1';\r\n            break;\r\n        case 'Combat':\r\n            color = 'deep-orange';\r\n            break;\r\n        default:\r\n            color = 'grey';\r\n            break;\r\n    }\r\n    return `chip ${color}`;\r\n}\r\n\r\nexport default formatType;","import React, { FunctionComponent, useState } from \"react\";\r\nimport Pokemon from \"../models/pokemon\";\r\n\r\nimport './pokemon-card.css';\r\nimport formatDate from \"../helpers/format-date\";\r\nimport formatType from \"../helpers/format-type\";\r\nimport {useHistory } from \"react-router-dom\";\r\n\r\ntype Props = {\r\n    pokemon: Pokemon,\r\n    borderColor?: string\r\n};\r\n\r\nconst PokemonCard: FunctionComponent<Props> = ({ pokemon, borderColor = '#009688' }) => {\r\n    const [color, setColor] = useState<string>();\r\n\r\n    const history = useHistory();\r\n\r\n    const showBorder = () => {\r\n        setColor(borderColor);\r\n    }\r\n\r\n    const hideBorder = () => {\r\n        setColor('#f5f5f5');\r\n    }\r\n\r\n    const goToPokemon = (id: number) => {\r\n        history.push(`/pokemons/${id}`);\r\n    }\r\n\r\n    const editPokemon = (id: number) => {\r\n        history.push(`/pokemons/edit/${id}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"col s12 m6 l4\" onMouseEnter={showBorder} onMouseLeave={hideBorder}>\r\n            <div className=\"card hoverable\" style={{ borderColor: color }}>\r\n                <div className=\"card-image waves-effect waves-block waves-light\">\r\n                    <img className=\"activator\" src={pokemon.picture} alt={pokemon.name} />\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title activator grey-text text-darken-4\">\r\n                        {pokemon.name}\r\n                        <i className=\"material-icons right\">{pokemon.types}</i>\r\n                    </span>\r\n                    <p>\r\n                        <small>Created: {formatDate(pokemon.created)}</small>\r\n                    </p>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                    <div className=\"type-container\">\r\n                        {pokemon.types.map((type) => (\r\n                            <span className={formatType(type)} key={type}>\r\n                                {type}\r\n                            </span>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-reveal\">\r\n                    <span className=\"card-title grey-text text-darken-4 center-align\">\r\n                        {pokemon.name}\r\n                        <i className=\"fas fa-times right\"></i>\r\n                    </span>\r\n                    <div className=\"card-content\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-content\">\r\n                                <p>Int because I require little markup to use effectively.</p>\r\n                            </div>\r\n                            <div className=\"card-action center-align\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col s4\">\r\n                                        <span className=\"cyan btn-floating pulse\" onClick={()=>goToPokemon(pokemon.id)}><i className=\"fas fa-eye\"></i></span>\r\n                                    </div>\r\n                                    <div className=\"col s4\">\r\n                                        <span className=\"green btn-floating pulse\" onClick={()=>editPokemon(pokemon.id)}><i className=\"fas fa-edit\"></i></span>\r\n                                    </div>\r\n                                    <div className=\"col s4\">\r\n                                        <span className=\"red btn-floating pulse\" onClick={()=>goToPokemon(pokemon.id)}><i className=\"fas fa-trash\"></i></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PokemonCard;","import Pokemon from \"../models/pokemon\";\r\n\r\n   \r\nexport const POKEMONS: Pokemon[] = [\r\n    {\r\n     id: 1,\r\n     name: \"Bulbizarre\",\r\n     hp: 25,\r\n     cp: 5,\r\n     picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\r\n     types: [\"Plante\", \"Poison\"],\r\n     created: new Date()\r\n    },\r\n    {\r\n     id: 2,\r\n     name: \"Salamèche\",\r\n     hp: 28,\r\n     cp: 6,\r\n     picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\r\n     types: [\"Feu\"],\r\n     created: new Date()\r\n    },\r\n    {\r\n     id: 3,\r\n     name: \"Carapuce\",\r\n     hp: 21,\r\n     cp: 4,\r\n     picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\r\n     types: [\"Eau\"],\r\n     created: new Date()\r\n    },\r\n    {\r\n     id: 4,\r\n     name: \"Aspicot\",\r\n     hp: 16,\r\n     cp: 2,\r\n     picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\r\n     types: [\"Insecte\", \"Poison\"],\r\n     created: new Date()\r\n    },\r\n    {\r\n     id: 5,\r\n     name: \"Roucool\",\r\n     hp: 30,\r\n     cp: 7,\r\n     picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\r\n     types: [\"Normal\", \"Vol\"],\r\n     created: new Date()\r\n    },\r\n    {\r\n     id: 6,\r\n     name: \"Rattata\",\r\n     hp: 18,\r\n     cp: 6,\r\n     picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\r\n     types: [\"Normal\"],\r\n     created: new Date()\r\n    },\r\n    {\r\n     id: 7,\r\n     name: \"Piafabec\",\r\n     hp: 14,\r\n     cp: 5,\r\n     picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\r\n     types: [\"Normal\", \"Vol\"],\r\n     created: new Date()\r\n    },\r\n    {\r\n     id: 8,\r\n     name: \"Abo\",\r\n     hp: 16,\r\n     cp: 4,\r\n     picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\r\n     types: [\"Poison\"],\r\n     created: new Date()\r\n    },\r\n    {\r\n     id: 9,\r\n     name: \"Pikachu\",\r\n     hp: 21,\r\n     cp: 7,\r\n     picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\r\n     types: [\"Electrik\"],\r\n     created: new Date()\r\n    },\r\n    {\r\n     id: 10,\r\n     name: \"Sabelette\",\r\n     hp: 19,\r\n     cp: 3,\r\n     picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\r\n     types: [\"Normal\"],\r\n     created: new Date()\r\n    },\r\n    {\r\n     id: 11,\r\n     name: \"Mélofée\",\r\n     hp: 25,\r\n     cp: 5,\r\n     picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\r\n     types: [\"Fée\"],\r\n     created: new Date()\r\n    },\r\n    {\r\n     id: 12,\r\n     name: \"Groupix\",\r\n     hp: 17,\r\n     cp: 8,\r\n     picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\r\n     types: [\"Feu\"],\r\n     created: new Date()\r\n    }\r\n   ];\r\n     \r\n   export default POKEMONS;","import POKEMONS from \"../mocks/mock-pokemon\";\r\nimport Pokemon from \"../models/pokemon\";\r\n  \r\nexport default class PokemonService {\r\n  \r\n  static pokemons:Pokemon[] = POKEMONS;\r\n  \r\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\r\n  \r\n  static getPokemons(): Promise<Pokemon[]> {\r\n    if(this.isDev) {\r\n      return fetch('http://localhost:3001/pokemons')\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {\r\n      resolve(this.pokemons);\r\n    });\r\n  }\r\n  \r\n  static getPokemon(id: number): Promise<Pokemon|null> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${id}`)\r\n      .then(response => response.json())\r\n      .then(data => this.isEmpty(data) ? null : data)\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\r\n    }); \r\n  }\r\n  \r\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {\r\n      const { id } = pokemon;\r\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\r\n      this.pokemons[index] = pokemon;\r\n      resolve(pokemon);\r\n    }); \r\n  }\r\n  \r\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      const { id } = pokemon;\r\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\r\n      resolve({});\r\n    }); \r\n  }\r\n  \r\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    pokemon.created = new Date(pokemon.created);\r\n  \r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      this.pokemons.push(pokemon);\r\n      resolve(pokemon);\r\n    }); \r\n  }\r\n  \r\n  static searchPokemon(term: string): Promise<Pokemon[]> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\r\n      resolve(results);\r\n    });\r\n  \r\n  }\r\n  \r\n  static isEmpty(data: Object): boolean {\r\n    return Object.keys(data).length === 0;\r\n  }\r\n  \r\n  static handleError(error: Error): void {\r\n    console.error(error);\r\n  }\r\n}","import { ChangeEvent, FunctionComponent, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Pokemon from \"../models/pokemon\";\r\nimport PokemonService from \"../services/pokemon-service\";\r\n\r\nconst PokemonSearch: FunctionComponent = () => {\r\n  \r\n    const [term, setTerm] = useState<string>('');\r\n    const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n   \r\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n      const term = e.target.value;\r\n      setTerm(term);\r\n   \r\n      if(term.length <= 1) {\r\n        setPokemons([]);\r\n        return;\r\n      }\r\n   \r\n      PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\r\n    }\r\n    \r\n    return (\r\n      <div className=\"row\"> \r\n      <div className=\"col s12 m6 offset-m3\"> \r\n        <div className=\"card\"> \r\n        <div className=\"card-content\"> \r\n          <div className=\"input-field\"> \r\n          <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} /> \r\n          </div> \r\n          <div className='collection'>\r\n          {pokemons.map((pokemon) => (\r\n            <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\r\n              {pokemon.name}\r\n            </Link>\r\n          ))}\r\n          </div> \r\n        </div> \r\n        </div> \r\n      </div> \r\n      </div>\r\n    );\r\n  }\r\n    \r\n  export default PokemonSearch;","import React, { FunctionComponent, useEffect, useState } from \"react\";\r\nimport Pokemon from \"../models/pokemon\";\r\nimport PokemonCard from \"../components/pokemon-card\";\r\nimport PokemonService from \"../services/pokemon-service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PokemonSearch from \"../components/pokemon-search\";\r\n\r\nconst PokemonList: FunctionComponent = () => {\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n\r\n  useEffect(() => {\r\n    PokemonService.getPokemons().then((pokemons) => setPokemons(pokemons));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"center\">Pokédex</h1>\r\n      <div className=\"row\">\r\n        <PokemonSearch />\r\n        {pokemons.map((pokemon) => (\r\n          <PokemonCard key={pokemon.id} pokemon={pokemon} borderColor=\"red\" />\r\n        ))}\r\n        <Link\r\n          to=\"/pokemons/add\"\r\n          style={{ position: \"fixed\", bottom: \"25px\", right: \"25px\" }}\r\n          className=\"btn-floating btn-large waves-effect waves-light green z-depth-3\"\r\n        >\r\n          <i className=\"fas fa-plus\"></i>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonList;\r\n","import React, { FunctionComponent } from 'react';\r\n  \r\nconst Loader: FunctionComponent = () => {\r\n   \r\n  return (\r\n    <div className=\"preloader-wrapper big active\"> \r\n      <div className=\"spinner-layer spinner-blue\"> \r\n        <div className=\"circle-clipper left\"> \r\n          <div className=\"circle\"></div> \r\n        </div>\r\n        <div className=\"gap-patch\"> \r\n          <div className=\"circle\"></div> \r\n        </div><div className=\"circle-clipper right\"> \r\n          <div className=\"circle\"></div> \r\n        </div>\r\n      </div> \r\n   </div> \r\n  );\r\n}\r\n   \r\nexport default Loader;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { RouteComponentProps, Link } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatDate from '../helpers/format-date';\r\nimport formatType from '../helpers/format-type';\r\nimport PokemonService from '../services/pokemon-service';\r\nimport Loader from '../components/loader';\r\n\r\n\r\ntype Params = { id: string };\r\n  \r\nconst PokemonDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n    \r\n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\r\n  \r\n  useEffect(() => {\r\n    PokemonService.getPokemon(+match.params.id).then((pokemon) => setPokemon(pokemon));\r\n  }, [match.params.id]);\r\n    \r\n  return (\r\n    <div>\r\n      { pokemon ? (\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m8 offset-m2\"> \r\n            <h2 className=\"header center\">{ pokemon.name }</h2>\r\n            <div className=\"card hoverable\"> \r\n              <div className=\"card-image\">\r\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\r\n                <Link to={`/pokemons/edit/${pokemon.id}`}  className=\"btn btn-floating halfway-fab waves-effect\"><i className=\"fas fa-edit\"></i></Link>\r\n              </div>\r\n              <div className=\"card-stacked\">\r\n                <div className=\"card-content\">\r\n                  <table className=\"bordered striped\">\r\n                    <tbody>\r\n                      <tr> \r\n                        <td>Nom</td> \r\n                        <td><strong>{ pokemon.name }</strong></td> \r\n                      </tr>\r\n                      <tr> \r\n                        <td>Points de vie</td> \r\n                        <td><strong>{ pokemon.hp }</strong></td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Dégâts</td> \r\n                        <td><strong>{ pokemon.cp }</strong></td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Types</td> \r\n                        <td>\r\n                          {pokemon.types.map(type => (\r\n                           <span key={type} className={formatType(type)}>{type}</span>\r\n                          ))}</td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Date de création</td> \r\n                        <td>{formatDate(pokemon.created)}</td> \r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                  <Link to=\"/\">Retour</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\"><Loader /></h4>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonDetail;","import React, { FunctionComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n  \r\nconst PageNotFound: FunctionComponent = () => {\r\n  \r\n  return (\r\n    <div className=\"center\">\r\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\r\n      <h1>Hey, cette page n'existe pas !</h1> \r\n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\r\n        Retourner à l'accueil\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PageNotFound;","import React, { ChangeEvent, FormEvent, FunctionComponent, useState } from \"react\";\r\nimport Pokemon from \"../models/pokemon\";\r\nimport formatType from \"../helpers/format-type\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PokemonService from \"../services/pokemon-service\";\r\n\r\ntype Props = {\r\n  pokemon: Pokemon;\r\n  isEditForm: boolean;\r\n};\r\n\r\ntype Field = {\r\n  value?: any;\r\n  error?: string;\r\n  isValid?: boolean;\r\n};\r\n\r\ntype Form = {\r\n  name: Field;\r\n  hp: Field;\r\n  cp: Field;\r\n  types: Field;\r\n  picture: Field;\r\n};\r\n\r\nconst PokemonForm: FunctionComponent<Props> = ({ pokemon, isEditForm }) => {\r\n  const [form, setForm] = useState<Form>({\r\n    name: { value: pokemon.name, isValid: true },\r\n    hp: { value: pokemon.hp, isValid: true },\r\n    cp: { value: pokemon.cp, isValid: true },\r\n    types: { value: pokemon.types, isValid: true },\r\n    picture: { value: pokemon.picture },\r\n  });\r\n\r\n  const types: string[] = [\r\n    \"Plante\",\r\n    \"Feu\",\r\n    \"Eau\",\r\n    \"Insecte\",\r\n    \"Normal\",\r\n    \"Electrik\",\r\n    \"Poison\",\r\n    \"Fée\",\r\n    \"Vol\",\r\n    \"Combat\",\r\n    \"Psy\",\r\n  ];\r\n\r\n  const isAddForm = () => {\r\n    return !isEditForm;\r\n  };\r\n\r\n  const hasType = (type: string): boolean => {\r\n    return form.types.value.includes(type);\r\n  };\r\n\r\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field | any = { [fieldName]: { value: fieldValue } };\r\n\r\n    setForm({ ...form, ...newField });\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const selectType = (\r\n    type: string,\r\n    e: ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    const checked = e.target.checked;\r\n    let newField: Field;\r\n\r\n    if (checked) {\r\n      const newTypes: string[] = form.types.value.concat([type]);\r\n      newField = { value: newTypes };\r\n    } else {\r\n      const newTypes: string[] = form.types.value.filter(\r\n        (currentType: string) => currentType !== type\r\n      );\r\n      newField = { value: newTypes };\r\n    }\r\n\r\n    setForm({ ...form, ...{ types: newField } });\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if (isFormValid) {\r\n      pokemon.picture = form.picture.value;\r\n      pokemon.name = form.name.value;\r\n      pokemon.hp = form.hp.value;\r\n      pokemon.cp = form.cp.value;\r\n      pokemon.types = form.types.value;\r\n\r\n      isEditForm ? updatePokemon() : addPokemon();\r\n    }\r\n  };\r\n\r\n  const addPokemon = () => {\r\n    PokemonService.addPokemon(pokemon).then(() => history.push(\"/pokemons\"));\r\n  };\r\n\r\n  const updatePokemon = () => {\r\n    PokemonService.updatePokemon(pokemon).then(() =>\r\n      history.push(`/pokemons/${pokemon.id}`)\r\n    );\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    // Validation de URL\r\n    if (isAddForm()) {\r\n      const start =\r\n        \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\r\n      const end = \".png\";\r\n\r\n      if (\r\n        !form.picture.value.startsWith(start) ||\r\n        !form.picture.value.endsWith(end)\r\n      ) {\r\n        const errorMsg: string = \"L'url n'est pas valide.\";\r\n        const newField: Field = {\r\n          value: form.picture.value,\r\n          error: errorMsg,\r\n          isValid: false,\r\n        };\r\n        newForm = { ...form, ...{ picture: newField } };\r\n      } else {\r\n        const newField: Field = {\r\n          value: form.picture.value,\r\n          error: \"\",\r\n          isValid: true,\r\n        };\r\n        newForm = { ...form, ...{ picture: newField } };\r\n      }\r\n    }\r\n    // Validator name\r\n    if (!/^[a-zA-Zàéè]{3,25}$/.test(form.name.value)) {\r\n      const errorMsg: string = \"Le nom du pokemon est requis (1 - 25).\";\r\n      const newField: Field = {\r\n        value: form.name.value,\r\n        error: errorMsg,\r\n        isValid: false,\r\n      };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    } else {\r\n      const newField: Field = {\r\n        value: form.name.value,\r\n        error: \"\",\r\n        isValid: true,\r\n      };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    }\r\n\r\n    // Validator hp\r\n    if (!/^[0-9]{1,3}$/.test(form.hp.value)) {\r\n      const errorMsg: string =\r\n        \"Les points de vie pokemon sont compris entre 0 et 999\";\r\n      const newField: Field = {\r\n        value: form.hp.value,\r\n        error: errorMsg,\r\n        isValid: false,\r\n      };\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    } else {\r\n      const newField: Field = {\r\n        value: form.hp.value,\r\n        error: \"\",\r\n        isValid: true,\r\n      };\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    }\r\n\r\n    // Validator cp\r\n    if (!/^[0-9]{1,2}$/.test(form.cp.value)) {\r\n      const errorMsg: string =\r\n        \"Les dégats du pokemon sont compris entre 0 et 99\";\r\n      const newField: Field = {\r\n        value: form.cp.value,\r\n        error: errorMsg,\r\n        isValid: false,\r\n      };\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    } else {\r\n      const newField: Field = {\r\n        value: form.hp.value,\r\n        error: \"\",\r\n        isValid: true,\r\n      };\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\r\n  };\r\n\r\n  const isTypesValid = (type: string): boolean => {\r\n    if (form.types.value.length === 1 && hasType(type)) {\r\n      return false;\r\n    }\r\n\r\n    if (form.types.value.length >= 3 && !hasType(type)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const deletePokemon = () => {\r\n    PokemonService.deletePokemon(pokemon).then(() => history.push(\"/pokemons\"));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\">\r\n            {isEditForm && (\r\n              <div className=\"card-image\">\r\n                <img\r\n                  src={pokemon.picture}\r\n                  alt={pokemon.name}\r\n                  style={{ width: \"250px\", margin: \"0 auto\" }}\r\n                />\r\n                <span className=\"btn-floating halfway-fab waves-effect waves-light red\">\r\n                  <i className=\"fas fa-trash\" onClick={deletePokemon}></i>\r\n                </span>\r\n              </div>\r\n            )}\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Pokemon Picture */}\r\n                {isAddForm() && (\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"picture\">Image</label>\r\n                    <input\r\n                      id=\"picture\"\r\n                      name=\"picture\"\r\n                      value={form.picture.value}\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      onChange={(e) => handleInputChange(e)}\r\n                    ></input>\r\n                    {form.picture.error && (\r\n                      <div className=\"card-panel red accent-1\">\r\n                        {form.picture.error}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                {/* Pokemon name */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Nom</label>\r\n                  <input\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    value={form.name.value}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></input>\r\n                  {form.name.error && (\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.name.error}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {/* Pokemon hp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"hp\">Point de vie</label>\r\n                  <input\r\n                    id=\"hp\"\r\n                    name=\"hp\"\r\n                    value={form.hp.value}\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></input>\r\n                  {form.cp.error && (\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.cp.error}\r\n                    </div>\r\n                  )}\r\n                  {form.hp.error && (\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.hp.error}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {/* Pokemon cp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cp\">Dégâts</label>\r\n                  <input\r\n                    id=\"cp\"\r\n                    name=\"cp\"\r\n                    value={form.cp.value}\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></input>\r\n                </div>\r\n                {/* Pokemon types */}\r\n                <div className=\"form-group\">\r\n                  <label>Types</label>\r\n                  {types.map((type) => (\r\n                    <div key={type} style={{ marginBottom: \"10px\" }}>\r\n                      <label>\r\n                        <input\r\n                          id={type}\r\n                          value={type}\r\n                          disabled={!isTypesValid(type)}\r\n                          type=\"checkbox\"\r\n                          className=\"filled-in\"\r\n                          checked={hasType(type)}\r\n                          onChange={(e) => selectType(type, e)}\r\n                        ></input>\r\n                        <span>\r\n                          <p className={formatType(type)}>{type}</p>\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button value=\"\" type=\"submit\" className=\"btn\">\r\n                  Valider\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PokemonForm;\r\n","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonForm from '../components/pokemon-form';\r\nimport PokemonService from '../services/pokemon-service';\r\nimport Loader from '../components/loader';\r\n\r\ntype Params = { id: string };\r\n  \r\nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n    \r\n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\r\n  \r\n  useEffect(() => {\r\n    PokemonService.getPokemon(+match.params.id).then((pokemon) => setPokemon(pokemon));\r\n  }, [match.params.id]);\r\n    \r\n  return (\r\n    <div>\r\n      { pokemon ? (\r\n        <div className=\"row\">\r\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\r\n            <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\"><Loader /></h4>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonEdit;","export default class Pokemon {\r\n    // 1. Typage des propriétés d'un pokémon.\r\n    id: number;\r\n    hp: number;\r\n    cp: number;\r\n    name: string;\r\n    picture: string;\r\n    types: Array<string>;\r\n    created?: Date;\r\n     \r\n    // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\r\n    constructor(\r\n     id: number,\r\n     hp: number = 100,\r\n     cp: number = 10,\r\n     name: string = '...',\r\n     picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/xxx.png',\r\n     types: Array<string> = ['Normal'],\r\n     created: Date = new Date()\r\n    ) {\r\n     // 3. Initialisation des propriétés d'un pokémons.\r\n     this.id = id;\r\n     this.hp = hp;\r\n     this.cp = cp;\r\n     this.name = name;\r\n     this.picture = picture;\r\n     this.types = types;\r\n     this.created = created;\r\n    }\r\n   }","import { FunctionComponent, useState } from \"react\";\r\nimport Pokemon from \"../models/pokemon\";\r\nimport PokemonForm from \"../components/pokemon-form\";\r\nimport React from \"react\";\r\n\r\nconst PokemonAdd: FunctionComponent = () => {\r\n    const [id] = useState<number>(new Date().getTime());\r\n    const [pokemon] = useState<Pokemon>(new Pokemon(id));\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2 className=\"header center\">Ajouter un pokémon</h2>\r\n            <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PokemonAdd;","export default class AuthenticationService{\r\n\r\n    static isAuthenticated: boolean = false;\r\n\r\n    static login(username: string, password: string): Promise<boolean>{\r\n        const isAuthenticated = (username === 'muriel' && password ==='AllahSeul');\r\n\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                this.isAuthenticated = isAuthenticated;\r\n                resolve(isAuthenticated);\r\n            }, 1000);\r\n        });\r\n    }\r\n}","import React, { FunctionComponent, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthenticationService from \"../services/authentication-service\";\r\n\r\ntype Field = {\r\n  value?: any;\r\n  error?: string;\r\n  isValid?: boolean;\r\n};\r\n\r\ntype Form = {\r\n  username: Field;\r\n  password: Field;\r\n};\r\n\r\nconst Login: FunctionComponent = () => {\r\n  const history = useHistory();\r\n\r\n  const [form, setForm] = useState<Form>({\r\n    username: { value: \"\" },\r\n    password: { value: \"\" },\r\n  });\r\n\r\n  const [message, setMessage] = useState<string>(\r\n    \"Vous êtes déconnecté. (Muriel / AllahSeul)\"\r\n  );\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n    setForm({ ...form, ...newField });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    // Validator username\r\n    if (form.username.value.length < 3) {\r\n      const errorMsg: string =\r\n        \"Votre prénom doit faire au moins 3 caractères de long.\";\r\n      const newField: Field = {\r\n        value: form.username.value,\r\n        error: errorMsg,\r\n        isValid: false,\r\n      };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    } else {\r\n      const newField: Field = {\r\n        value: form.username.value,\r\n        error: \"\",\r\n        isValid: true,\r\n      };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    }\r\n\r\n    // Validator password\r\n    if (form.password.value.length < 6) {\r\n      const errorMsg: string =\r\n        \"Votre mot de passe doit faire au moins 6 caractères de long.\";\r\n      const newField: Field = {\r\n        value: form.password.value,\r\n        error: errorMsg,\r\n        isValid: false,\r\n      };\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    } else {\r\n      const newField: Field = {\r\n        value: form.password.value,\r\n        error: \"\",\r\n        isValid: true,\r\n      };\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n\r\n    return newForm.username.isValid && newForm.password.isValid;\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if (isFormValid) {\r\n      setMessage(\"👉 Tentative de connexion en cours ...\");\r\n      AuthenticationService.login(\r\n        form.username.value,\r\n        form.password.value\r\n      ).then((isAuthenticated) => {\r\n        if (!isAuthenticated) {\r\n          setMessage(\"🔐 Identifiant ou mot de passe incorrect.\");\r\n          return;\r\n        }\r\n\r\n        history.push(\"/pokemons\");\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\">\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Form message */}\r\n                {message && (\r\n                  <div className=\"form-group\">\r\n                    <div className=\"card-panel grey lighten-5\">{message}</div>\r\n                  </div>\r\n                )}\r\n                {/* Field username */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Identifiant</label>\r\n                  <input\r\n                    id=\"username\"\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    className=\"form-control\"\r\n                    value={form.username.value}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></input>\r\n                  {/* error */}\r\n                  {form.username.error && (\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.username.error}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {/* Field password */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Mot de passe</label>\r\n                  <input\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    className=\"form-control\"\r\n                    value={form.password.value}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></input>\r\n                  {/* error */}\r\n                  {form.password.error && (\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.password.error}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">\r\n                  Valider\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AuthenticationService from \"./services/authentication-service\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      const isAuthenticated = AuthenticationService.isAuthenticated;\r\n      if (!isAuthenticated) {\r\n        return <Redirect to={{ pathname: \"/login\" }} />;\r\n      }\r\n\r\n      return <Component {...props} />;\r\n    }}\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport PokemonList from \"./pages/pokemon-list\";\r\nimport { BrowserRouter as Router, Switch, Link, Route } from \"react-router-dom\";\r\nimport PokemonsDetail from \"./pages/pokemon-details\";\r\nimport PageNotFound from \"./pages/page-not-found\";\r\nimport PokemonEdit from \"./pages/pokemon-edit\";\r\nimport PokemonAdd from \"./pages/pokemon.add\";\r\nimport Login from \"./pages/login\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nconst App: FunctionComponent = () => {\r\n  return (\r\n    <Router>\r\n      <div className=\"\">\r\n        {/* La bare de naviagtion commun a toutes les pages*/}\r\n        <nav>\r\n          <div className=\"nav-wrapper\">\r\n          <Link to=\"/\" className=\"brand-logo\">Pokédex</Link>\r\n            <ul className=\"right hide-on-med-and-down\">\r\n              <li><Link to=\"/\" className=\"\">Accueil</Link></li>\r\n              <li><Link to=\"/\" className=\"\">Listes</Link></li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n\r\n        {/* Le système de gestion des routes de notre application */}\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/\" component={PokemonList} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <PrivateRoute exact path=\"/pokemons/add\" component={PokemonAdd} />\r\n          <PrivateRoute exact path=\"/pokemons\" component={PokemonList} />\r\n          <PrivateRoute path=\"/pokemons/edit/:id\" component={PokemonEdit} />\r\n          <PrivateRoute path=\"/pokemons/:id\" component={PokemonsDetail} />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}